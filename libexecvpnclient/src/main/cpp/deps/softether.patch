diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index c49a3c7..0b472cf 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -136,19 +136,19 @@ add_subdirectory(Cedar)
 add_subdirectory(Mayaqua)
 
 # vpnserver
-add_subdirectory(vpnserver)
+#add_subdirectory(vpnserver)
 
 # vpnclient
 add_subdirectory(vpnclient)
 
 # vpnbridge
-add_subdirectory(vpnbridge)
+#add_subdirectory(vpnbridge)
 
 # vpncmd
-add_subdirectory(vpncmd)
+#add_subdirectory(vpncmd)
 
 # vpntest
-add_subdirectory(vpntest)
+#add_subdirectory(vpntest)
 
 # libhamcore
 add_subdirectory(libhamcore)
diff --git a/src/Cedar/CMakeLists.txt b/src/Cedar/CMakeLists.txt
index 7818d79..1845c3c 100644
--- a/src/Cedar/CMakeLists.txt
+++ b/src/Cedar/CMakeLists.txt
@@ -21,10 +21,36 @@ set_target_properties(cedar
 
 target_link_libraries(cedar PUBLIC mayaqua)
 
-cmake_host_system_information(RESULT HAS_SSE2 QUERY HAS_SSE2)
+#cmake_host_system_information(RESULT HAS_SSE2 QUERY HAS_SSE2)
+
+if(CMAKE_SYSTEM_PROCESSOR MATCHES "^(aarch64|arm)")
+  include(CheckCCompilerFlag)
+  check_c_compiler_flag("-mfpu=neon" HAS_NEON)
+  if(HAS_NEON)
+    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -mfpu=neon")
+    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -mfpu=neon")
+  endif()
+else()
+  include(CheckIncludeFiles)
+  check_include_files("emmintrin.h" HAS_SSE2)
+endif()
+
+if(HAS_SSE2)
+  set(BLAKE2_SRC_PATH ${TOP_DIRECTORY}/3rdparty/BLAKE2/sse)
+  set(BLAKE2_SRC ${BLAKE2_SRC_PATH}/blake2s.c)
+elseif(HAS_NEON)
+  set(BLAKE2_SRC_PATH ${TOP_DIRECTORY}/3rdparty/BLAKE2/neon)
+  set(BLAKE2_SRC ${BLAKE2_SRC_PATH}/blake2s.c)
+else()
+  set(BLAKE2_SRC_PATH ${TOP_DIRECTORY}/3rdparty/BLAKE2/ref)
+  set(BLAKE2_SRC ${BLAKE2_SRC_PATH}/blake2s-ref.c)
+endif()
+
+
+#set(BLAKE2_SRC_PATH $<IF:$<BOOL:${HAS_SSE2}>,${TOP_DIRECTORY}/3rdparty/BLAKE2/sse,${TOP_DIRECTORY}/3rdparty/BLAKE2/ref>)
+#set(BLAKE2_SRC $<IF:$<BOOL:${HAS_SSE2}>,${BLAKE2_SRC_PATH}/blake2s.c,${BLAKE2_SRC_PATH}/blake2s-ref.c>)
+
 
-set(BLAKE2_SRC_PATH $<IF:$<BOOL:${HAS_SSE2}>,${TOP_DIRECTORY}/3rdparty/BLAKE2/sse,${TOP_DIRECTORY}/3rdparty/BLAKE2/ref>)
-set(BLAKE2_SRC $<IF:$<BOOL:${HAS_SSE2}>,${BLAKE2_SRC_PATH}/blake2s.c,${BLAKE2_SRC_PATH}/blake2s-ref.c>)
 
 target_include_directories(cedar PUBLIC ${BLAKE2_SRC_PATH})
 target_sources(cedar PRIVATE ${BLAKE2_SRC})
diff --git a/src/Mayaqua/FileIO.c b/src/Mayaqua/FileIO.c
index c03c390..7bfe1a6 100644
--- a/src/Mayaqua/FileIO.c
+++ b/src/Mayaqua/FileIO.c
@@ -19,7 +19,51 @@
 #include "Win32.h"
 
 #include <Hamcore.h>
-
+#include <stdlib.h>
+#include <string.h>
+#include <wchar.h>
+
+void GetDirFromEnv(char *out_name, UINT size, char * env_name) {
+	if (out_name == NULL || size == 0) {
+   		Print("Error: GetDirFromEnv missing parameter\n", env_name);
+   		exit(0);
+   	}
+   	char* dir = getenv(env_name);
+   	if (dir != NULL) {
+   		// Get the length of the environment variable
+   		size_t envSize = strlen(dir);
+   		if (envSize < size) {
+   			strncpy(out_name, dir, envSize);
+   			out_name[envSize] = '\0';
+   		} else {
+   			Print("Error: Destination buffer is too small for %S value.\n", env_name);
+   			exit(0);
+   		}
+   	} else {
+   		Print("Error:%S env value is not set.\n", env_name);
+   		exit(0);
+   	}
+   }
+void GetDirFromEnvW(wchar_t *out_name, UINT size, const char *env_name) {
+   	if (out_name == NULL || size == 0 || env_name == NULL) {
+   		Print("Error: GetDirFromEnvW missing paramter\n", env_name);
+   		exit(0);
+   	}
+   	char* dir = getenv(env_name);
+   	if (dir != NULL) {
+   		size_t requiredSize = mbstowcs(NULL, dir, 0)   1;
+   		if (requiredSize <= size) {
+   			mbstowcs(out_name, dir, size - 1);
+   			out_name[requiredSize - 1] = L'\0';
+   		} else {
+   			fwprintf(stdout, L"Error: Destination buffer is too small for %S value.\n", env_name);
+   			exit(0);
+   		}
+   	} else {
+   		fwprintf(stdout, L"Error: %S environment variable is not set.\n", env_name);
+   		exit(0);
+   	}
+}
 static char exe_file_name[MAX_SIZE] = "/tmp/a.out";
 static wchar_t exe_file_name_w[MAX_SIZE] = L"/tmp/a.out";
 static LIST *hamcore = NULL;
diff --git a/src/Mayaqua/Mayaqua.c b/src/Mayaqua/Mayaqua.c
index 8649275..a805965 100644
--- a/src/Mayaqua/Mayaqua.c
+++ b/src/Mayaqua/Mayaqua.c
@@ -621,12 +621,15 @@ void CheckUnixTempDir()
 		char tmp[128], tmp2[64];
 		UINT64 now = SystemTime64();
 		IO *o;
+		char* tmpDir = getenv("SE_TMPDIR");
 
-		MakeDir("/tmp");
+		//MakeDir("/tmp");
+		MakeDir(tmpDir);
 
 		Format(tmp2, sizeof(tmp2), "%I64u", now);
 
-		Format(tmp, sizeof(tmp), "/tmp/.%s", tmp2);
+		//Format(tmp, sizeof(tmp), "/tmp/.%s", tmp2);
+		Format(tmp, sizeof(tmp), "%s/.%s", tmpDir, tmp2);
 
 		o = FileCreate(tmp);
 		if (o == NULL)
@@ -634,7 +637,8 @@ void CheckUnixTempDir()
 			o = FileOpen(tmp, false);
 			if (o == NULL)
 			{
-				Print("Unable to use /tmp.\n\n");
+				//Print("Unable to use /tmp.\n\n");
+				Print("Unable to use %s dir.\n\n", tmpDir);
 				exit(0);
 			}
 		}
diff --git a/src/Mayaqua/Unix.c b/src/Mayaqua/Unix.c
index 0c3778d..1a987e3 100755
--- a/src/Mayaqua/Unix.c
+++ b/src/Mayaqua/Unix.c
@@ -42,7 +42,8 @@
 #include <sys/utsname.h>
 #include <sys/wait.h>
 
-#ifdef UNIX_LINUX
+//#ifdef UNIX_LINUX
+#if defined(UNIX_LINUX) || defined(__ANDROID__)
 #include <sys/statfs.h>
 #endif
 
diff --git a/src/CMakeLists.txt b/src/CMakeLists.txt
index c49a3c7..0b472cf 100644
--- a/src/CMakeLists.txt
+++ b/src/CMakeLists.txt
@@ -136,19 +136,19 @@ add_subdirectory(Cedar)
 add_subdirectory(Mayaqua)
 
 # vpnserver
-add_subdirectory(vpnserver)
+#add_subdirectory(vpnserver)
 
 # vpnclient
 add_subdirectory(vpnclient)
 
 # vpnbridge
-add_subdirectory(vpnbridge)
+#add_subdirectory(vpnbridge)
 
 # vpncmd
-add_subdirectory(vpncmd)
+#add_subdirectory(vpncmd)
 
 # vpntest
-add_subdirectory(vpntest)
+#add_subdirectory(vpntest)
 
 # libhamcore
 add_subdirectory(libhamcore)
diff --git a/src/Cedar/CMakeLists.txt b/src/Cedar/CMakeLists.txt
index 7818d79..1845c3c 100644
--- a/src/Cedar/CMakeLists.txt
+++ b/src/Cedar/CMakeLists.txt
@@ -21,10 +21,36 @@ set_target_properties(cedar
 
 target_link_libraries(cedar PUBLIC mayaqua)
 
-cmake_host_system_information(RESULT HAS_SSE2 QUERY HAS_SSE2)
+#cmake_host_system_information(RESULT HAS_SSE2 QUERY HAS_SSE2)
+
+if(CMAKE_SYSTEM_PROCESSOR MATCHES "^(aarch64|arm)")
+  include(CheckCCompilerFlag)
+  check_c_compiler_flag("-mfpu=neon" HAS_NEON)
+  if(HAS_NEON)
+    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -mfpu=neon")
+    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -mfpu=neon")
+  endif()
+else()
+  include(CheckIncludeFiles)
+  check_include_files("emmintrin.h" HAS_SSE2)
+endif()
+
+if(HAS_SSE2)
+  set(BLAKE2_SRC_PATH ${TOP_DIRECTORY}/3rdparty/BLAKE2/sse)
+  set(BLAKE2_SRC ${BLAKE2_SRC_PATH}/blake2s.c)
+elseif(HAS_NEON)
+  set(BLAKE2_SRC_PATH ${TOP_DIRECTORY}/3rdparty/BLAKE2/neon)
+  set(BLAKE2_SRC ${BLAKE2_SRC_PATH}/blake2s.c)
+else()
+  set(BLAKE2_SRC_PATH ${TOP_DIRECTORY}/3rdparty/BLAKE2/ref)
+  set(BLAKE2_SRC ${BLAKE2_SRC_PATH}/blake2s-ref.c)
+endif()
+
+
+#set(BLAKE2_SRC_PATH $<IF:$<BOOL:${HAS_SSE2}>,${TOP_DIRECTORY}/3rdparty/BLAKE2/sse,${TOP_DIRECTORY}/3rdparty/BLAKE2/ref>)
+#set(BLAKE2_SRC $<IF:$<BOOL:${HAS_SSE2}>,${BLAKE2_SRC_PATH}/blake2s.c,${BLAKE2_SRC_PATH}/blake2s-ref.c>)
+
 
-set(BLAKE2_SRC_PATH $<IF:$<BOOL:${HAS_SSE2}>,${TOP_DIRECTORY}/3rdparty/BLAKE2/sse,${TOP_DIRECTORY}/3rdparty/BLAKE2/ref>)
-set(BLAKE2_SRC $<IF:$<BOOL:${HAS_SSE2}>,${BLAKE2_SRC_PATH}/blake2s.c,${BLAKE2_SRC_PATH}/blake2s-ref.c>)
 
 target_include_directories(cedar PUBLIC ${BLAKE2_SRC_PATH})
 target_sources(cedar PRIVATE ${BLAKE2_SRC})
diff --git a/src/Mayaqua/FileIO.c b/src/Mayaqua/FileIO.c
index c03c390..7bfe1a6 100644
--- a/src/Mayaqua/FileIO.c
+++ b/src/Mayaqua/FileIO.c
@@ -19,7 +19,51 @@
 #include "Win32.h"
 
 #include <Hamcore.h>
-
+#include <stdlib.h>
+#include <string.h>
+#include <wchar.h>
+
+void GetDirFromEnv(char *out_name, UINT size, char * env_name) {
+	if (out_name == NULL || size == 0) {
+   		Print("Error: GetDirFromEnv missing parameter\n", env_name);
+   		exit(0);
+   	}
+   	char* dir = getenv(env_name);
+   	if (dir != NULL) {
+   		// Get the length of the environment variable
+   		size_t envSize = strlen(dir);
+   		if (envSize < size) {
+   			strncpy(out_name, dir, envSize);
+   			out_name[envSize] = '\0';
+   		} else {
+   			Print("Error: Destination buffer is too small for %S value.\n", env_name);
+   			exit(0);
+   		}
+   	} else {
+   		Print("Error:%S env value is not set.\n", env_name);
+   		exit(0);
+   	}
+   }
+void GetDirFromEnvW(wchar_t *out_name, UINT size, const char *env_name) {
+   	if (out_name == NULL || size == 0 || env_name == NULL) {
+   		Print("Error: GetDirFromEnvW missing paramter\n", env_name);
+   		exit(0);
+   	}
+   	char* dir = getenv(env_name);
+   	if (dir != NULL) {
+   		size_t requiredSize = mbstowcs(NULL, dir, 0)   1;
+   		if (requiredSize <= size) {
+   			mbstowcs(out_name, dir, size - 1);
+   			out_name[requiredSize - 1] = L'\0';
+   		} else {
+   			fwprintf(stdout, L"Error: Destination buffer is too small for %S value.\n", env_name);
+   			exit(0);
+   		}
+   	} else {
+   		fwprintf(stdout, L"Error: %S environment variable is not set.\n", env_name);
+   		exit(0);
+   	}
+}
 static char exe_file_name[MAX_SIZE] = "/tmp/a.out";
 static wchar_t exe_file_name_w[MAX_SIZE] = L"/tmp/a.out";
 static LIST *hamcore = NULL;
diff --git a/src/Mayaqua/Mayaqua.c b/src/Mayaqua/Mayaqua.c
index 8649275..a805965 100644
--- a/src/Mayaqua/Mayaqua.c
+++ b/src/Mayaqua/Mayaqua.c
@@ -621,12 +621,15 @@ void CheckUnixTempDir()
 		char tmp[128], tmp2[64];
 		UINT64 now = SystemTime64();
 		IO *o;
+		char* tmpDir = getenv("SE_TMPDIR");
 
-		MakeDir("/tmp");
+		//MakeDir("/tmp");
+		MakeDir(tmpDir);
 
 		Format(tmp2, sizeof(tmp2), "%I64u", now);
 
-		Format(tmp, sizeof(tmp), "/tmp/.%s", tmp2);
+		//Format(tmp, sizeof(tmp), "/tmp/.%s", tmp2);
+		Format(tmp, sizeof(tmp), "%s/.%s", tmpDir, tmp2);
 
 		o = FileCreate(tmp);
 		if (o == NULL)
@@ -634,7 +637,8 @@ void CheckUnixTempDir()
 			o = FileOpen(tmp, false);
 			if (o == NULL)
 			{
-				Print("Unable to use /tmp.\n\n");
+				//Print("Unable to use /tmp.\n\n");
+				Print("Unable to use %s dir.\n\n", tmpDir);
 				exit(0);
 			}
 		}
diff --git a/src/Mayaqua/Unix.c b/src/Mayaqua/Unix.c
index 0c3778d..1a987e3 100755
--- a/src/Mayaqua/Unix.c
+++ b/src/Mayaqua/Unix.c
@@ -42,7 +42,8 @@
 #include <sys/utsname.h>
 #include <sys/wait.h>
 
-#ifdef UNIX_LINUX
+//#ifdef UNIX_LINUX
+#if defined(UNIX_LINUX) || defined(__ANDROID__)
 #include <sys/statfs.h>
 #endif
 
